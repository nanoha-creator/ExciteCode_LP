{"version":3,"sources":["_fonts.scss","_variables.scss","style.css","_base.scss","_main.scss","_mixin.scss"],"names":[],"mappings":"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","file":"../style.css","sourcesContent":["@use \"variables\" as *;\r\n\r\n// ------------------------------------------------\r\n//  ファイル名：_fonts.scss\r\n//  機能：フォントのスタイルを記述する\r\n// ------------------------------------------------\r\n// NotoSansJP Medium\r\n@font-face {\r\n  font-family: NotoSansJP;\r\n  font-style: normal;\r\n  font-weight: $fontweight-medium;\r\n  src: url(\"../fonts/NotoSansJP-Medium.otf\") format(\"opentype\");\r\n}\r\n\r\n// Roboto Regular\r\n@font-face {\r\n  font-family: Roboto;\r\n  font-style: normal;\r\n  font-weight: $fontweight-regular;\r\n  src: url(\"../fonts/Roboto-Regular.ttf\") format(\"truetype\");\r\n}\r\n\r\n// Roboto Medium\r\n@font-face {\r\n  font-family: Roboto;\r\n  font-style: normal;\r\n  font-weight: $fontweight-medium;\r\n  src: url(\"../fonts/Roboto-Medium.ttf\") format(\"truetype\");\r\n}\r\n","// ------------------------------------------------\r\n//    ファイル名：_variables.scss\r\n//    機能：変数を記述する\r\n// --------------------------------------------------\r\n// 色\r\n$color-beige: #f7f7ee;\r\n$color-beige-sub: #e7e7db;\r\n$color-green: #2b3f2f;\r\n$color-greyish-green: #4d6452;\r\n$color-black: #2b2b21;\r\n\r\n// フォントの太さ\r\n$fontweight-thin: 100;\r\n$fontweight-light: 300;\r\n$fontweight-regular: 400;\r\n$fontweight-medium: 500;\r\n$fontweight-bold: 700;\r\n$fontweight-extrabold: 800;\r\n$fontweight-black: 900;\r\n\r\n// ブレークポイント\r\n$breakpoints: (\r\n  lg: 1440px,\r\n  sm: 768px,\r\n  // PC幅→スマホ幅へ切り替える幅\r\n) !default;\r\n","@font-face {\n  font-family: NotoSansJP;\n  font-style: normal;\n  font-weight: 500;\n  src: url(\"../fonts/NotoSansJP-Medium.otf\") format(\"opentype\");\n}\n@font-face {\n  font-family: Roboto;\n  font-style: normal;\n  font-weight: 400;\n  src: url(\"../fonts/Roboto-Regular.ttf\") format(\"truetype\");\n}\n@font-face {\n  font-family: Roboto;\n  font-style: normal;\n  font-weight: 500;\n  src: url(\"../fonts/Roboto-Medium.ttf\") format(\"truetype\");\n}\n* {\n  box-sizing: border-box;\n}\n\nbody {\n  margin: 0;\n  color: #2b3f2f;\n  font-family: Roboto, \"Noto Sans JP\", serif;\n  font-weight: 500;\n  line-height: normal;\n}\n\nbutton,\ninput,\nselect,\ntextarea {\n  font-family: inherit;\n  font-size: 100%;\n}\n\na {\n  color: #0069ff;\n}\n\nimg {\n  max-width: 100%;\n  vertical-align: top;\n}\n\n.ly_wrapper {\n  overflow-x: hidden;\n}\n\n.ly_header {\n  width: 100%;\n  padding: 12px 0;\n  background-color: #f7f7ee;\n  position: fixed;\n  top: 0;\n  z-index: 9999;\n}\n\n.ly_header_inner {\n  width: 100%;\n  max-width: 1230px;\n  padding-left: 15px;\n  padding-right: 15px;\n  margin: 0 auto;\n}\n\n.ly_cont {\n  width: 100%;\n  max-width: 1060px;\n  padding-left: 15px;\n  padding-right: 15px;\n  margin: 0 auto;\n}\n.ly_cont.ly_cont__vision {\n  padding: 104px 15px 99px;\n}\n@media screen and (max-width: 768px) {\n  .ly_cont.ly_cont__vision {\n    padding-bottom: 106px;\n  }\n}\n.ly_cont.ly_cont__service {\n  padding: 104px 15px 100px;\n}\n.ly_cont.ly_cont__news {\n  padding: 100px 15px;\n}\n@media screen and (max-width: 768px) {\n  .ly_cont.ly_cont__news {\n    padding: 110px 15px 90px;\n  }\n}\n\n.ly_footer {\n  width: 100%;\n  background-color: #2b2b21;\n}\n\n.ly_footer_inner {\n  width: 100%;\n  max-width: 1230px;\n  height: 79px;\n  padding-left: 15px;\n  padding-right: 15px;\n  margin: 0 auto;\n  text-align: center;\n  padding-top: 32px;\n}\n@media screen and (max-width: 768px) {\n  .ly_footer_inner {\n    height: 60px;\n    padding-top: 23px;\n  }\n}\n\n.bl_headerUtils {\n  display: flex;\n  justify-content: space-between;\n  height: 50px;\n}\n.bl_headerUtils * {\n  height: inherit;\n}\n\n.bl_headerUtils_logo {\n  display: inline-block;\n}\n\n.bl_headerUtils_logo a {\n  text-decoration: none;\n  color: #2b3f2f;\n  font-size: 1.625rem;\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n}\n@media screen and (max-width: 768px) {\n  .bl_headerUtils_logo a {\n    font-size: 1.5rem;\n  }\n}\n\n.bl_headerNav {\n  display: inline-block;\n}\n@media screen and (max-width: 768px) {\n  .bl_headerNav {\n    position: fixed;\n    top: 0;\n    left: 0;\n    z-index: 1000;\n    width: 100vw;\n    height: 100vh;\n    background-color: #f7f7ee;\n    opacity: 0;\n    visibility: hidden;\n    transition: visibility opacity 0.5s;\n  }\n  .bl_headerNav * {\n    height: auto;\n  }\n}\n@media screen and (max-width: 768px) and (max-width: 768px) {\n  .bl_headerNav.is_fade {\n    opacity: 1;\n    visibility: visible;\n  }\n}\n\n.bl_headerNav_inner {\n  display: flex;\n}\n@media screen and (max-width: 768px) {\n  .bl_headerNav_inner {\n    flex-direction: column;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n}\n\n.bl_headerNav_list {\n  display: flex;\n  list-style: none;\n}\n@media screen and (max-width: 768px) {\n  .bl_headerNav_list {\n    flex-direction: column;\n  }\n}\n\n.bl_headerNav_inner .bl_headerNav_list {\n  margin-right: 68px;\n  margin-left: auto;\n}\n@media screen and (max-width: 768px) {\n  .bl_headerNav_inner .bl_headerNav_list {\n    margin-right: auto;\n  }\n}\n\n@media screen and (max-width: 768px) {\n  .bl_headerNav_listItem {\n    margin-bottom: 24px;\n  }\n}\n\n.bl_headerNav_listItem:not(:last-child) {\n  margin-right: 65px;\n}\n@media screen and (max-width: 768px) {\n  .bl_headerNav_listItem:not(:last-child) {\n    margin-right: 0;\n  }\n}\n\n.bl_headerNav_link {\n  text-decoration: none;\n  color: #2b3f2f;\n  letter-spacing: 0.05em;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n@media screen and (max-width: 768px) {\n  .bl_headerNav_link {\n    padding: 15px 0;\n  }\n}\n\n.bl_hamburgerBtn {\n  display: none;\n}\n@media screen and (max-width: 768px) {\n  .bl_hamburgerBtn {\n    display: block;\n  }\n}\n\n.bl_hamburgerBtn_icon {\n  position: relative;\n  z-index: 1100;\n  display: block;\n  width: 25px;\n  height: 16px;\n}\n\n.bl_hamburgerBtn_bar {\n  position: absolute;\n  display: block;\n  width: inherit;\n  height: 2px;\n  background-color: #2b3f2f;\n  transition: all 0.3s;\n  border-radius: 100vh;\n}\n\n.bl_hamburgerBtn_bar.bl_hamburgerBtn_bar__top {\n  top: -1px;\n}\n\n.bl_hamburgerBtn_bar.bl_hamburgerBtn_bar__mid {\n  top: 50%;\n  transform: translateY(-50%);\n}\n\n.bl_hamburgerBtn_bar.bl_hamburgerBtn_bar__bottom {\n  bottom: -1px;\n}\n\n.bl_hamburgerBtn.is_close .bl_hamburgerBtn_bar.bl_hamburgerBtn_bar__top {\n  transform: translate(-5px, 19px) rotate(45deg);\n}\n\n.bl_hamburgerBtn.is_close .bl_hamburgerBtn_bar.bl_hamburgerBtn_bar__mid {\n  opacity: 0;\n}\n\n.bl_hamburgerBtn.is_close .bl_hamburgerBtn_bar.bl_hamburgerBtn_bar__bottom {\n  transform: translate(-5px, 3px) rotate(-45deg);\n}\n\n.is_noscroll {\n  overflow: hidden;\n}\n\n.el_copyRight {\n  color: #f7f7ee;\n  font-size: 0.875rem;\n  font-weight: 400;\n  letter-spacing: 0.05em;\n}\n\n.bl_firstView {\n  position: relative;\n  width: 100%;\n  height: 740px;\n  background-image: url(\"../img/fv-bgi.jpg\");\n  background-position: center center;\n  background-size: cover;\n  background-repeat: no-repeat;\n  margin-top: 74px;\n}\n@media screen and (max-width: 768px) {\n  .bl_firstView {\n    height: calc(100vh - 74px);\n  }\n}\n\n.bl_firstView_txt {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  white-space: nowrap;\n  text-align: center;\n  color: #f7f7ee;\n  font-size: 3rem;\n  letter-spacing: 0.05em;\n  line-height: 1.375;\n  display: inline-block;\n  padding-left: 0.05em;\n}\n.bl_firstView_txt::before {\n  display: block;\n  content: \"\";\n  width: 0;\n  height: 0;\n  margin-top: calc((1 - 1.375) * 0.5em);\n}\n.bl_firstView_txt::after {\n  display: block;\n  content: \"\";\n  width: 0;\n  height: 0;\n  margin-bottom: calc((1 - 1.375) * 0.5em);\n}\n.bl_firstView_txt::before {\n  padding-top: 15px;\n}\n.bl_firstView_txt::after {\n  padding-bottom: 7px;\n}\n@media screen and (max-width: 768px) {\n  .bl_firstView_txt {\n    font-size: 1.875rem;\n    line-height: 1.4666;\n    display: inline-block;\n  }\n  .bl_firstView_txt::before {\n    display: block;\n    content: \"\";\n    width: 0;\n    height: 0;\n    margin-top: calc((1 - 1.4666) * 0.5em);\n  }\n  .bl_firstView_txt::after {\n    display: block;\n    content: \"\";\n    width: 0;\n    height: 0;\n    margin-bottom: calc((1 - 1.4666) * 0.5em);\n  }\n  .bl_firstView_txt::before {\n    padding-top: 6px;\n  }\n  .bl_firstView_txt::after {\n    padding-bottom: 2px;\n  }\n}\n\n.bl_cta {\n  position: relative;\n  width: 100%;\n  height: 340px;\n  background-image: url(\"../img/BG.jpg\");\n  background-position: center center;\n  background-size: cover;\n  background-repeat: no-repeat;\n}\n\n.bl_cardUnit {\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  gap: 35px;\n}\n@media screen and (max-width: 768px) {\n  .bl_cardUnit {\n    grid-template-columns: 1fr;\n    gap: 46px;\n  }\n}\n\n@media screen and (max-width: 768px) {\n  .bl_card {\n    padding: 0 12.5px;\n  }\n}\n\n.bl_card_imgWrapper {\n  position: relative;\n  padding-top: 75%;\n  overflow: hidden;\n}\n.bl_card_imgWrapper > img {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 100%;\n  height: auto;\n}\n\n.bl_card .bl_card_imgWrapper {\n  margin-bottom: 20px;\n}\n@media screen and (max-width: 768px) {\n  .bl_card .bl_card_imgWrapper {\n    margin-bottom: 14px;\n  }\n}\n\n.bl_card_body > *:not(:last-child) {\n  margin-bottom: 30px;\n}\n\n.bl_card_ttl {\n  text-align: center;\n}\n\n.bl_postList {\n  list-style: none;\n  padding-top: 1px;\n}\n\n.bl_postList_item {\n  display: flex;\n  align-items: bottom;\n  padding-bottom: 29px;\n  border-bottom: 1px solid #e7e7db;\n}\n.bl_postList_item:not(:first-child) {\n  padding-top: 30px;\n}\n@media screen and (max-width: 768px) {\n  .bl_postList_item {\n    display: flex;\n    flex-direction: column;\n    padding-bottom: 19px;\n  }\n  .bl_postList_item .bl_postList_date {\n    margin-bottom: 14px;\n  }\n}\n\n.bl_postList_date {\n  display: inline-block;\n  width: 122px;\n  font-size: 0.875rem;\n  line-height: 1.7857;\n  display: inline-block;\n}\n.bl_postList_date::before {\n  display: block;\n  content: \"\";\n  width: 0;\n  height: 0;\n  margin-top: calc((1 - 1.7857) * 0.5em);\n}\n.bl_postList_date::after {\n  display: block;\n  content: \"\";\n  width: 0;\n  height: 0;\n  margin-bottom: calc((1 - 1.7857) * 0.5em);\n}\n.bl_postList_date::before {\n  padding-top: 3px;\n}\n.bl_postList_date::after {\n  padding-bottom: 3px;\n}\n\n.bl_postList_link {\n  text-decoration: none;\n  font-size: 0.9375rem;\n  letter-spacing: 0.05em;\n  color: #2b3f2f;\n  line-height: 1.6;\n  display: inline-block;\n}\n.bl_postList_link::before {\n  display: block;\n  content: \"\";\n  width: 0;\n  height: 0;\n  margin-top: calc((1 - 1.6) * 0.5em);\n}\n.bl_postList_link::after {\n  display: block;\n  content: \"\";\n  width: 0;\n  height: 0;\n  margin-bottom: calc((1 - 1.6) * 0.5em);\n}\n.bl_postList_link::before {\n  padding-top: 3px;\n}\n.bl_postList_link::after {\n  padding-bottom: 3px;\n}\n\n.el_btn {\n  width: 130px;\n  padding: 15.5px 0;\n  text-decoration: none;\n  color: #f7f7ee;\n  letter-spacing: 0.05em;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #2b3f2f;\n  border-radius: 4px;\n}\n.el_btn:hover {\n  background-color: #4d6452;\n}\n.el_btn.el_btn__wide {\n  width: 220px;\n}\n.el_btn.el_btn__fz20 {\n  font-size: 20px;\n}\n.el_btn.el_btn__p18 {\n  padding: 18px 0;\n}\n\n@media screen and (max-width: 768px) {\n  .bl_headerNav .el_btn {\n    margin: 15px auto;\n  }\n}\n\n.bl_cta .el_btn {\n  position: absolute;\n  top: 140px;\n  left: 50%;\n  transform: translateX(-50%);\n  z-index: 999;\n}\n\n.el_secTtl {\n  position: relative;\n  font-size: 2.25rem;\n  letter-spacing: 0.05em;\n  padding-bottom: 21px;\n  margin-bottom: 50px;\n}\n.el_secTtl::after {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  display: block;\n  content: \"\";\n  width: 34px;\n  height: 4px;\n  background-color: #2b3f2f;\n}\n.el_secTtl.el_secTtl__center {\n  text-align: center;\n}\n.el_secTtl.el_secTtl__center::after {\n  left: 50%;\n  transform: translateX(-50%);\n}\n@media screen and (max-width: 768px) {\n  .el_secTtl.el_secTtl__center {\n    text-align: left;\n  }\n  .el_secTtl.el_secTtl__center::after {\n    left: 0;\n    transform: none;\n  }\n}\n\n.bl_elUnit :not(:last-child) {\n  margin-bottom: 30px;\n}\n\n.el_txt {\n  letter-spacing: 0.05em;\n  line-height: 1.875;\n  display: inline-block;\n}\n.el_txt::before {\n  display: block;\n  content: \"\";\n  width: 0;\n  height: 0;\n  margin-top: calc((1 - 1.875) * 0.5em);\n}\n.el_txt::after {\n  display: block;\n  content: \"\";\n  width: 0;\n  height: 0;\n  margin-bottom: calc((1 - 1.875) * 0.5em);\n}\n.el_txt::before {\n  padding-top: 6px;\n}\n.el_txt::after {\n  padding-bottom: 2px;\n}\n.el_txt.el_txt__large {\n  font-size: 1.5rem;\n  line-height: 1.8333;\n  display: inline-block;\n}\n.el_txt.el_txt__large::before {\n  display: block;\n  content: \"\";\n  width: 0;\n  height: 0;\n  margin-top: calc((1 - 1.8333) * 0.5em);\n}\n.el_txt.el_txt__large::after {\n  display: block;\n  content: \"\";\n  width: 0;\n  height: 0;\n  margin-bottom: calc((1 - 1.8333) * 0.5em);\n}\n.el_txt.el_txt__large::before {\n  padding-top: 8px;\n}\n.el_txt.el_txt__large::after {\n  padding-bottom: 3px;\n}\n@media screen and (max-width: 768px) {\n  .el_txt.el_txt__large {\n    font-size: 1.25rem;\n    line-height: 1.8;\n    display: inline-block;\n  }\n  .el_txt.el_txt__large::before {\n    display: block;\n    content: \"\";\n    width: 0;\n    height: 0;\n    margin-top: calc((1 - 1.8) * 0.5em);\n  }\n  .el_txt.el_txt__large::after {\n    display: block;\n    content: \"\";\n    width: 0;\n    height: 0;\n    margin-bottom: calc((1 - 1.8) * 0.5em);\n  }\n  .el_txt.el_txt__large::before {\n    margin-top: -9px;\n  }\n  .el_txt.el_txt__large::after {\n    margin-bottom: -9px;\n  }\n}\n\n.hp_bgcBeige {\n  background-color: #f7f7ee;\n}\n\n.hp_onlyPc {\n  display: block;\n}\n@media screen and (max-width: 768px) {\n  .hp_onlyPc {\n    display: none;\n  }\n}\n\n.hp_onlySp {\n  display: none;\n}\n@media screen and (max-width: 768px) {\n  .hp_onlySp {\n    display: block;\n  }\n}","@use \"variables\" as *;\r\n\r\n// ------------------------------------------------\r\n//  ファイル名：_base.scss\r\n//  機能：ベーススタイルを記述する\r\n// ------------------------------------------------\r\n\r\n* {\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  margin: 0;\r\n  color: $color-green;\r\n  font-family: Roboto, \"Noto Sans JP\", serif;\r\n  font-weight: $fontweight-medium;\r\n  line-height: normal;\r\n}\r\n\r\nbutton,\r\ninput,\r\nselect,\r\ntextarea {\r\n  font-family: inherit;\r\n  font-size: 100%;\r\n}\r\n\r\na {\r\n  color: #0069ff;\r\n}\r\n\r\nimg {\r\n  max-width: 100%;\r\n  vertical-align: top;\r\n}\r\n","@use \"mixin\" as *;\r\n@use \"variables\" as *;\r\n\r\n// ------------------------------------------------\r\n//  ファイル名：_main.scss\r\n//  機能：webページ全体のスタイルを記述する\r\n// ------------------------------------------------\r\n\r\n// ----------------------\r\n//  レイアウト\r\n// ----------------------\r\n.ly_wrapper {\r\n  overflow-x: hidden;\r\n}\r\n\r\n// ヘッダー\r\n.ly_header {\r\n  width: 100%;\r\n  padding: 12px 0;\r\n  background-color: $color-beige;\r\n\r\n  // 上部に固定\r\n  position: fixed;\r\n  top: 0;\r\n  z-index: 9999;\r\n}\r\n\r\n.ly_header_inner {\r\n  width: 100%;\r\n  max-width: 1230px;\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n  margin: 0 auto;\r\n}\r\n\r\n// コンテンツ\r\n.ly_cont {\r\n  width: 100%;\r\n  max-width: 1060px;\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n  margin: 0 auto;\r\n\r\n  &.ly_cont__vision {\r\n    padding: 104px 15px 99px;\r\n\r\n    @include sp {\r\n      padding-bottom: 106px;\r\n    }\r\n  }\r\n\r\n  &.ly_cont__service {\r\n    padding: 104px 15px 100px;\r\n  }\r\n\r\n  &.ly_cont__news {\r\n    padding: 100px 15px;\r\n    @include sp {\r\n      padding: 110px 15px 90px;\r\n    }\r\n  }\r\n}\r\n\r\n// フッター\r\n.ly_footer {\r\n  width: 100%;\r\n  background-color: $color-black;\r\n}\r\n\r\n.ly_footer_inner {\r\n  width: 100%;\r\n  max-width: 1230px;\r\n  height: 79px;\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  padding-top: 32px;\r\n\r\n  @include sp {\r\n    height: 60px;\r\n    padding-top: 23px;\r\n  }\r\n}\r\n\r\n// ----------------------\r\n//  ヘッダー\r\n// ----------------------\r\n.bl_headerUtils {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  height: 50px;\r\n\r\n  // 高さを継承\r\n  * {\r\n    height: inherit;\r\n  }\r\n}\r\n\r\n// サイトロゴ\r\n.bl_headerUtils_logo {\r\n  display: inline-block;\r\n}\r\n\r\n.bl_headerUtils_logo a {\r\n  // 文字\r\n  text-decoration: none;\r\n  color: $color-green;\r\n  font-size: 1.625rem;\r\n  font-weight: $fontweight-medium;\r\n\r\n  // 文字を上下中央揃え\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  @include sp {\r\n    font-size: 1.5rem;\r\n  }\r\n}\r\n\r\n// ----------------------\r\n//  ヘッダーナビゲーション\r\n// ----------------------\r\n.bl_headerNav {\r\n  display: inline-block;\r\n\r\n  @include sp {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 1000;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background-color: $color-beige;\r\n\r\n    // 最初は非表示(ハンバーガーボタン押下でふわっと表示(is_fade))\r\n    opacity: 0;\r\n    visibility: hidden;\r\n    transition: visibility opacity 0.5s;\r\n\r\n    * {\r\n      // PC幅で高さを継承していたものを解除（bl_headerUtils）\r\n      height: auto;\r\n    }\r\n\r\n    &.is_fade {\r\n      @include sp {\r\n        opacity: 1;\r\n        visibility: visible;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.bl_headerNav_inner {\r\n  // リストとボタンを横並び\r\n  display: flex;\r\n\r\n  @include sp {\r\n    flex-direction: column;\r\n\r\n    // 上下左右中央揃え\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n  }\r\n}\r\n\r\n.bl_headerNav_list {\r\n  // 横並び\r\n  display: flex;\r\n\r\n  // スタイル\r\n  list-style: none;\r\n\r\n  @include sp {\r\n    flex-direction: column;\r\n  }\r\n}\r\n\r\n// 配置\r\n.bl_headerNav_inner .bl_headerNav_list {\r\n  margin-right: 68px;\r\n  margin-left: auto;\r\n\r\n  @include sp {\r\n    margin-right: auto;\r\n  }\r\n}\r\n\r\n.bl_headerNav_listItem {\r\n  @include sp {\r\n    margin-bottom: 24px;\r\n  }\r\n}\r\n\r\n.bl_headerNav_listItem:not(:last-child) {\r\n  margin-right: 65px;\r\n\r\n  @include sp {\r\n    margin-right: 0;\r\n  }\r\n}\r\n\r\n// リンク\r\n.bl_headerNav_link {\r\n  // 文字\r\n  text-decoration: none;\r\n  color: $color-green;\r\n  letter-spacing: 0.05em;\r\n\r\n  // 文字を上下左右中央揃え\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  @include sp {\r\n    // クリック領域を広げる\r\n    padding: 15px 0;\r\n  }\r\n}\r\n\r\n// ----------------------\r\n//  ハンバーガーボタン\r\n// ----------------------\r\n.bl_hamburgerBtn {\r\n  display: none;\r\n  @include sp {\r\n    display: block;\r\n  }\r\n}\r\n\r\n// ハンバーガーボタンアイコン\r\n.bl_hamburgerBtn_icon {\r\n  // 各バーの基準位置\r\n  position: relative;\r\n  z-index: 1100;\r\n\r\n  // サイズ\r\n  display: block;\r\n  width: 25px;\r\n  height: 16px;\r\n}\r\n\r\n// ハンバーガーボタン（オープン）：共通\r\n.bl_hamburgerBtn_bar {\r\n  position: absolute;\r\n  display: block;\r\n  width: inherit;\r\n  height: 2px;\r\n  background-color: $color-green;\r\n  transition: all 0.3s;\r\n  border-radius: 100vh;\r\n}\r\n\r\n// ハンバーガーボタン（オープン）：一段目のバー\r\n.bl_hamburgerBtn_bar.bl_hamburgerBtn_bar__top {\r\n  top: -1px;\r\n}\r\n\r\n// ハンバーガーボタン（オープン）：二段目のバー\r\n.bl_hamburgerBtn_bar.bl_hamburgerBtn_bar__mid {\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n}\r\n\r\n// ハンバーガーボタン（オープン：三段目のバー\r\n.bl_hamburgerBtn_bar.bl_hamburgerBtn_bar__bottom {\r\n  bottom: -1px;\r\n}\r\n\r\n// ハンバーガーボタン（クローズ）：一段目のバー\r\n.bl_hamburgerBtn.is_close .bl_hamburgerBtn_bar.bl_hamburgerBtn_bar__top {\r\n  transform: translate(-5px, 19px) rotate(45deg);\r\n}\r\n\r\n// ハンバーガーボタン（クローズ）：二段目のバー\r\n.bl_hamburgerBtn.is_close .bl_hamburgerBtn_bar.bl_hamburgerBtn_bar__mid {\r\n  opacity: 0;\r\n}\r\n\r\n// ハンバーガーボタン（クローズ）：三段目のバー\r\n.bl_hamburgerBtn.is_close .bl_hamburgerBtn_bar.bl_hamburgerBtn_bar__bottom {\r\n  transform: translate(-5px, 3px) rotate(-45deg);\r\n}\r\n\r\n// ハンバーガーボタンのオープン時はスクロールしない\r\n.is_noscroll {\r\n  overflow: hidden;\r\n}\r\n\r\n// ----------------------\r\n//  フッター\r\n// ----------------------\r\n.el_copyRight {\r\n  // 文字\r\n  color: $color-beige;\r\n  font-size: 0.875rem;\r\n  font-weight: $fontweight-regular;\r\n  letter-spacing: 0.05em;\r\n}\r\n\r\n// ----------------------\r\n//  FV\r\n// ----------------------\r\n.bl_firstView {\r\n  // 文字の基準位置\r\n  position: relative;\r\n\r\n  // 背景画像\r\n  width: 100%;\r\n  height: 740px;\r\n  background-image: url(\"../img/fv-bgi.jpg\");\r\n  background-position: center center;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n\r\n  // 余白（ヘッダー分下げる）\r\n  margin-top: 74px;\r\n\r\n  @include sp {\r\n    height: calc(100vh - 74px);\r\n  }\r\n}\r\n\r\n.bl_firstView_txt {\r\n  // 位置\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n\r\n  // 文字\r\n  white-space: nowrap;\r\n  text-align: center;\r\n  color: $color-beige;\r\n  font-size: 3rem;\r\n  letter-spacing: 0.05em;\r\n  @include line-height-adjustment(1.375);\r\n  @include line-height-inc(15px, 7px);\r\n\r\n  // 文字位置調整\r\n  padding-left: 0.05em;\r\n\r\n  @include sp {\r\n    // 文字\r\n    font-size: 1.875rem;\r\n    @include line-height-adjustment(1.4666);\r\n    @include line-height-inc(6px, 2px);\r\n  }\r\n}\r\n\r\n// ----------------------\r\n//  CTAエリア\r\n// ----------------------\r\n.bl_cta {\r\n  // ボタンの基準位置\r\n  position: relative;\r\n\r\n  // サイズ\r\n  width: 100%;\r\n  height: 340px;\r\n\r\n  // 背景画像\r\n  background-image: url(\"../img/BG.jpg\");\r\n  background-position: center center;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n}\r\n\r\n// ----------------------\r\n//  カード（横に３つ並び）\r\n// ----------------------\r\n.bl_cardUnit {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  gap: 35px;\r\n\r\n  @include sp {\r\n    grid-template-columns: 1fr;\r\n    gap: 46px;\r\n  }\r\n}\r\n\r\n.bl_card {\r\n  @include sp {\r\n    padding: 0 12.5px;\r\n  }\r\n}\r\n\r\n.bl_card_imgWrapper {\r\n  position: relative;\r\n  padding-top: 75%;\r\n  overflow: hidden;\r\n\r\n  & > img {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 100%;\r\n    height: auto;\r\n  }\r\n}\r\n\r\n// モジュール間の余白\r\n.bl_card .bl_card_imgWrapper {\r\n  margin-bottom: 20px;\r\n\r\n  @include sp {\r\n    margin-bottom: 14px;\r\n  }\r\n}\r\n\r\n.bl_card_body > *:not(:last-child) {\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.bl_card_ttl {\r\n  text-align: center;\r\n}\r\n\r\n// ----------------------\r\n//  投稿リスト\r\n// ----------------------\r\n.bl_postList {\r\n  list-style: none;\r\n  padding-top: 1px;\r\n}\r\n\r\n.bl_postList_item {\r\n  display: flex;\r\n  align-items: bottom;\r\n  padding-bottom: 29px;\r\n  border-bottom: 1px solid $color-beige-sub;\r\n\r\n  &:not(:first-child) {\r\n    padding-top: 30px;\r\n  }\r\n\r\n  @include sp {\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding-bottom: 19px;\r\n\r\n    // 配置\r\n    .bl_postList_date {\r\n      margin-bottom: 14px;\r\n    }\r\n  }\r\n}\r\n\r\n.bl_postList_date {\r\n  display: inline-block;\r\n  width: 122px;\r\n\r\n  // 文字\r\n  font-size: 0.875rem;\r\n  @include line-height-adjustment(1.7857);\r\n  @include line-height-inc(3px, 3px);\r\n}\r\n\r\n.bl_postList_link {\r\n  text-decoration: none;\r\n  font-size: 0.9375rem;\r\n  letter-spacing: 0.05em;\r\n  color: $color-green;\r\n  @include line-height-adjustment(1.6);\r\n  @include line-height-inc(3px, 3px);\r\n}\r\n\r\n// ----------------------\r\n//  共通パーツ\r\n// ----------------------\r\n// ボタン\r\n.el_btn {\r\n  // サイズ\r\n  width: 130px;\r\n  padding: 15.5px 0;\r\n\r\n  // 文字\r\n  text-decoration: none;\r\n  color: $color-beige;\r\n  letter-spacing: 0.05em;\r\n\r\n  // 文字を上下左右中央揃え\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  // スタイル\r\n  background-color: $color-green;\r\n  border-radius: 4px;\r\n\r\n  &:hover {\r\n    background-color: $color-greyish-green;\r\n  }\r\n\r\n  // モディファイア：幅220px\r\n  &.el_btn__wide {\r\n    width: 220px;\r\n  }\r\n\r\n  // モディファイア：フォントサイズ20px\r\n  &.el_btn__fz20 {\r\n    font-size: 20px;\r\n  }\r\n\r\n  // モディファイア：上下のパディング18px\r\n  &.el_btn__p18 {\r\n    padding: 18px 0;\r\n  }\r\n}\r\n\r\n// ヘッダーナビゲーション\r\n.bl_headerNav .el_btn {\r\n  @include sp {\r\n    margin: 15px auto;\r\n  }\r\n}\r\n\r\n// CTAエリア\r\n.bl_cta .el_btn {\r\n  position: absolute;\r\n  top: 140px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  z-index: 999;\r\n}\r\n\r\n// セクションタイトル\r\n.el_secTtl {\r\n  // 疑似要素の基準位置\r\n  position: relative;\r\n\r\n  // 文字\r\n  font-size: 2.25rem;\r\n  letter-spacing: 0.05em;\r\n\r\n  // 疑似要素との余白\r\n  padding-bottom: 21px;\r\n\r\n  // モジュール間の余白\r\n  margin-bottom: 50px;\r\n\r\n  &::after {\r\n    // 位置\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n\r\n    // スタイル\r\n    display: block;\r\n    content: \"\";\r\n    width: 34px;\r\n    height: 4px;\r\n    background-color: $color-green;\r\n  }\r\n\r\n  // モディファイア：中央揃え\r\n  &.el_secTtl__center {\r\n    text-align: center;\r\n\r\n    &::after {\r\n      left: 50%;\r\n      transform: translateX(-50%);\r\n    }\r\n\r\n    @include sp {\r\n      text-align: left;\r\n\r\n      &::after {\r\n        left: 0;\r\n        transform: none;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// エレメント要素のまとまり\r\n.bl_elUnit {\r\n  & :not(:last-child) {\r\n    // モジュール間の余白\r\n    margin-bottom: 30px;\r\n  }\r\n}\r\n\r\n// テキスト\r\n.el_txt {\r\n  letter-spacing: 0.05em;\r\n  @include line-height-adjustment(1.875);\r\n  @include line-height-inc(6px, 2px);\r\n\r\n  // モディファイア：文字が大きい\r\n  &.el_txt__large {\r\n    font-size: 1.5rem;\r\n    @include line-height-adjustment(1.8333);\r\n    @include line-height-inc(8px, 3px);\r\n\r\n    @include sp {\r\n      font-size: 1.25rem;\r\n      @include line-height-adjustment(1.8);\r\n      @include line-height-dec(-9px, -9px);\r\n    }\r\n  }\r\n}\r\n\r\n// ----------------------\r\n//  ヘルパー\r\n// ----------------------\r\n// 背景色：ベージュ\r\n.hp_bgcBeige {\r\n  background-color: $color-beige;\r\n}\r\n\r\n// PC幅でのみ適応\r\n.hp_onlyPc {\r\n  display: block;\r\n  @include sp {\r\n    display: none;\r\n  }\r\n}\r\n\r\n// スマホ幅でのみ適応\r\n.hp_onlySp {\r\n  display: none;\r\n  @include sp {\r\n    display: block;\r\n  }\r\n}\r\n","@use \"variables\" as *;\r\n\r\n// ------------------------------------------------\r\n//  ファイル名：_mixin.scss\r\n//  機能：mixinを記述する\r\n// ------------------------------------------------\r\n// ----------\r\n// 数値から単位を除去する\r\n// ----------\r\n@function strip-unit($value) {\r\n  @if type-of($value) == \"number\" and not unitless($value) {\r\n    @return $value / ($value * 0 + 1);\r\n  }\r\n  @return $value;\r\n}\r\n\r\n// ----------\r\n// viewport-scaleで設定する値を計算する\r\n// ----------\r\n@function viewport-scale-value($min-breakpoint, $min-value, $max-breakpoint, $max-value, $vp-unit) {\r\n  $u01: unit(map-get($breakpoints, $min-breakpoint));\r\n  $u02: unit($min-value);\r\n  $u03: unit(map-get($breakpoints, $max-breakpoint));\r\n  $u04: unit($max-value);\r\n  $a: strip-unit(map-get($breakpoints, $min-breakpoint));\r\n  $b: strip-unit($min-value);\r\n  $c: strip-unit(map-get($breakpoints, $max-breakpoint));\r\n  $d: strip-unit($max-value);\r\n\r\n  // $min-valueと$max-valueが一致している場合は、そのまま返す\r\n  @if $min-value == $max-value {\r\n    @return $min-value;\r\n  }\r\n\r\n  // 単位が一致していることが前提\r\n  @if $u01 == $u03 and $u02 == $u04 {\r\n    $x: (($d - $b) / ($c - $a) * 100) + #{$vp-unit};\r\n    $y: (($c * $b - $a * $d) / ($c - $a)) + #{$u02};\r\n\r\n    @if $y == 0 {\r\n      // プロパティ値が小さい数値→大きい数値への変動の場合\r\n      @if $min-value < $max-value {\r\n        @return max($x, $min-value);\r\n      }\r\n\r\n      // プロパティ値が大きい数値→小さい数値への変動の場合\r\n      @else {\r\n        @return min($x, $min-value);\r\n      }\r\n    } @else {\r\n      // プロパティ値が小さい数値→大きい数値への変動の場合\r\n      @if $min-value < $max-value {\r\n        @return max(calc(#{$x} + #{$y}), $min-value);\r\n      }\r\n\r\n      // プロパティ値が大きい数値→小さい数値への変動の場合\r\n      @else {\r\n        @return min(calc(#{$x} + #{$y}), $min-value);\r\n      }\r\n    }\r\n  }\r\n  @return 0;\r\n}\r\n\r\n// ----------\r\n// 画面幅の変動に応じて、プロパティの値を変動させる\r\n// ----------\r\n// $property: 設定したいプロパティ\r\n// $min-vp: 変動前の画面幅\r\n// $min-value: 変動前のプロパティ値\r\n// $max-vp: 変動後の画面幅\r\n// max-value: 変動後のプロパティ値\r\n// $vp-unit: 単位\r\n// ----------\r\n@mixin viewport-scale($property, $min-breakpoint: sm, $min-value, $max-breakpoint: md, $max-value, $vp-unit: \"vw\") {\r\n  // $min-valueの個数と$max-valueの個数が一致していることが前提\r\n  @if length($min-value) == length($max-value) {\r\n    // プロパティ値が1つの場合\r\n    @if length($min-value) == 1 {\r\n      #{$property}: viewport-scale-value($min-breakpoint, $min-value, $max-breakpoint, $max-value, $vp-unit);\r\n    }\r\n\r\n    // プロパティ値が2つの場合（margin/paddingを想定）\r\n    @else if length($min-value) == 2 {\r\n      #{$property}-top: viewport-scale-value(\r\n        $min-breakpoint,\r\n        nth($min-value, 1),\r\n        $max-breakpoint,\r\n        nth($max-value, 1),\r\n        $vp-unit\r\n      );\r\n      #{$property}-right: viewport-scale-value(\r\n        $min-breakpoint,\r\n        nth($min-value, 2),\r\n        $max-breakpoint,\r\n        nth($max-value, 2),\r\n        $vp-unit\r\n      );\r\n      #{$property}-bottom: viewport-scale-value(\r\n        $min-breakpoint,\r\n        nth($min-value, 1),\r\n        $max-breakpoint,\r\n        nth($max-value, 1),\r\n        $vp-unit\r\n      );\r\n      #{$property}-left: viewport-scale-value(\r\n        $min-breakpoint,\r\n        nth($min-value, 2),\r\n        $max-breakpoint,\r\n        nth($max-value, 2),\r\n        $vp-unit\r\n      );\r\n    }\r\n\r\n    // プロパティ値が3つの場合（margin/paddingを想定）\r\n    @else if length($min-value) == 3 {\r\n      #{$property}-top: viewport-scale-value(\r\n        $min-breakpoint,\r\n        nth($min-value, 1),\r\n        $max-breakpoint,\r\n        nth($max-value, 1),\r\n        $vp-unit\r\n      );\r\n      #{$property}-right: viewport-scale-value(\r\n        $min-breakpoint,\r\n        nth($min-value, 2),\r\n        $max-breakpoint,\r\n        nth($max-value, 2),\r\n        $vp-unit\r\n      );\r\n      #{$property}-bottom: viewport-scale-value(\r\n        $min-breakpoint,\r\n        nth($min-value, 2),\r\n        $max-breakpoint,\r\n        nth($max-value, 2),\r\n        $vp-unit\r\n      );\r\n      #{$property}-left: viewport-scale-value(\r\n        $min-breakpoint,\r\n        nth($min-value, 3),\r\n        $max-breakpoint,\r\n        nth($max-value, 3),\r\n        $vp-unit\r\n      );\r\n    }\r\n\r\n    // プロパティ値が4つの場合（margin/paddingを想定）\r\n    @else if length($min-value) == 4 {\r\n      #{$property}-top: viewport-scale-value(\r\n        $min-breakpoint,\r\n        nth($min-value, 1),\r\n        $max-breakpoint,\r\n        nth($max-value, 1),\r\n        $vp-unit\r\n      );\r\n      #{$property}-right: viewport-scale-value(\r\n        $min-breakpoint,\r\n        nth($min-value, 2),\r\n        $max-breakpoint,\r\n        nth($max-value, 2),\r\n        $vp-unit\r\n      );\r\n      #{$property}-bottom: viewport-scale-value(\r\n        $min-breakpoint,\r\n        nth($min-value, 3),\r\n        $max-breakpoint,\r\n        nth($max-value, 3),\r\n        $vp-unit\r\n      );\r\n      #{$property}-left: viewport-scale-value(\r\n        $min-breakpoint,\r\n        nth($min-value, 4),\r\n        $max-breakpoint,\r\n        nth($max-value, 4),\r\n        $vp-unit\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n// ----------\r\n//  スマホ幅用メディアクエリを定義する（PC幅が基準）\r\n// ----------\r\n@mixin sp() {\r\n  @media screen and (max-width: map-get($breakpoints, sm)) {\r\n    @content;\r\n  }\r\n}\r\n\r\n// ----------\r\n//  line-heightを調節する（XDとwebで仕様が異なるため）\r\n// ----------\r\n//  $line-height: line-heightの指定値\r\n// ----------\r\n@mixin line-height-adjustment($lineHeight) {\r\n  line-height: $lineHeight;\r\n  display: inline-block;\r\n\r\n  &::before {\r\n    display: block;\r\n    content: \"\";\r\n    width: 0;\r\n    height: 0;\r\n    margin-top: calc((1 - #{$lineHeight}) * 0.5em);\r\n  }\r\n\r\n  &::after {\r\n    display: block;\r\n    content: \"\";\r\n    width: 0;\r\n    height: 0;\r\n    margin-bottom: calc((1 - #{$lineHeight}) * 0.5em);\r\n  }\r\n}\r\n\r\n// ----------\r\n//  行間を調節する（XDとwebで仕様が異なるため）\r\n//  line-height-adjustment()でもずれる場合に固定値で調整\r\n//  行間を減らしたい場合に使用する\r\n//  行間を増やしたい場合はline-height-inc()を使用する\r\n// ----------\r\n//  $value: 調整値\r\n// ----------\r\n@mixin line-height-dec($value-top, $value-bottom) {\r\n  &::before {\r\n    margin-top: $value-top;\r\n  }\r\n\r\n  &::after {\r\n    margin-bottom: $value-bottom;\r\n  }\r\n}\r\n\r\n// ----------\r\n//  行間を調節する（XDとwebで仕様が異なるため）\r\n//  line-height-adjustment()でもずれる場合に固定値で調整\r\n//  行間を増やすしたい場合に使用する\r\n//  行間を減らしたい場合はline-height-dec()を使用する\r\n// ----------\r\n//  $value: 調整値\r\n// ----------\r\n@mixin line-height-inc($value-top, $value-bottom) {\r\n  &::before {\r\n    padding-top: $value-top;\r\n  }\r\n\r\n  &::after {\r\n    padding-bottom: $value-bottom;\r\n  }\r\n}\r\n"]}